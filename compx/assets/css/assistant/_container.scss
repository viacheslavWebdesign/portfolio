@import 'var';
@mixin min($bp, $max: "null", $device: "screen") {
  @if $max == "null" {
    @media only #{$device} and (min-width: #{$bp}) {
      @content;
    }
  } @else {
    @media only #{$device} and (min-width: #{$bp}) and (max-width: #{$max}) {
      @content;
    }
  }
}

@function bp($bp) {
  @return map-get($adaptive-breakpoints, $bp);
}

// $adaptive-breakpoints: (
//     na: 0px,
//     sm: 576px,
//     md: 768px,
//     lg: 992px,
//     xl: 1200px,
//     xxl: 1400px,
// );

@function container($container-size, $true-val: false) {
  @return map-get($container-sizes, $container-size);
}

$container-sizes: (
  sm: map-get($adaptive-breakpoints, sm),
  md: map-get($adaptive-breakpoints, md),
  lg: map-get($adaptive-breakpoints, lg),
  xl: map-get($adaptive-breakpoints, xl),
  xxl: map-get($adaptive-breakpoints, xxl)
);

// .container {
//   padding-right: 1rem;
//   padding-left: 1rem;

//   &:not(.is-fluid) {
//     margin: 0 auto;

//     @each $bp, $container-size in $container-sizes {
//       @include min(#{bp(#{$bp})}) {
//         width: 100%;
//         max-width: container(#{$bp});
//       }
//     }
//   }
// }

// @each $bp, $container-size in $container-sizes {
//   .container-#{$bp} {
//     margin: 0 auto;
//     padding-right: 1rem;
//     padding-left: 1rem;
//     width: 100%;

//     $i: index($container-sizes, $bp $container-size);

//     @for $j from $i through length($container-sizes) {
//       @include min(#{bp(nth(nth($container-sizes, $j), 1))}) {
//         max-width: container(#{nth(nth($container-sizes, $j), 1)});
//       }
//     }
//   }
// }

.container{
  max-width: $containerMaxWidth;
  padding: 0 $containerPadding;
  width: 100%;
  margin: 0 auto;
  box-sizing: border-box;
}

.container-fluid{
  padding: 0 $containerPadding;
  width: 100%;
  margin: 0 auto;
}

@media (max-width: map_get($adaptive-breakpoints, 'xxl')){
  .container{
    max-width: $containerMaxWidthMedium;
  }
}

@media (max-width: map_get($adaptive-breakpoints, 'lg')){
  .container{
    max-width: $containerMaxWidthTablet;
  }
}